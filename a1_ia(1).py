# -*- coding: utf-8 -*-
"""A1_IA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1So8QhqTqEUPWCWGqCb7X-oIPNbXinCRT
"""

!pip install matplotlib

!pip install -U scikit-fuzzy

import matplotlib.pyplot as plt
import numpy as np
import skfuzzy as fuzz
from skfuzzy import control as ctrl

if __name__=="__main__":
  print("exemplo")

  #variaveis de entrada(antes da fuzzyficação "antecedente")
  curso_superior = ctrl.Antecedent(np.arange(0, 101, 1), 'curso superior')
  experiencia = ctrl.Antecedent(np.arange(0, 101, 1), 'experiência')

  #variaveis de saida(depois da fuzzyficação "consequente")
  admissao = ctrl.Consequent(np.arange(0, 101, 10), 'admissão')

  #fuzyficação
  curso_superior['incompleto'] = fuzz.trapmf(curso_superior.universe, [0, 0, 30, 50])
  curso_superior['cursando'] = fuzz.trimf(curso_superior.universe, [30, 50, 70])
  curso_superior['completo'] = fuzz.trapmf(curso_superior.universe, [50, 70, 100, 100])

  experiencia['inexperiente'] = fuzz.trapmf(experiencia.universe, [0, 0, 30, 70])
  experiencia['experiente'] = fuzz.trapmf(experiencia.universe, [30, 70, 100, 100])

  admissao['descartado'] = fuzz.trapmf(admissao.universe, [0, 0, 30, 50])
  admissao['analise'] = fuzz.trimf(admissao.universe, [30, 50, 70])
  admissao['contratado'] = fuzz.trapmf(admissao.universe, [50, 70, 100, 100])

  #definição das regras:
  regra1 = ctrl.Rule(curso_superior['incompleto'] & experiencia['inexperiente'], admissao['descartado'])
  regra2 = ctrl.Rule(curso_superior['completo'] & experiencia['experiente'], admissao['contratado'])
  regra3 = ctrl.Rule(curso_superior['cursando'], admissao['analise'])
  regra4 = ctrl.Rule(curso_superior['completo'] & experiencia['inexperiente'], admissao['analise'])
  regra5 = ctrl.Rule(curso_superior['incompleto'] & experiencia['experiente'], admissao['analise'])


  #ativação das regras
  controle_admissao = ctrl.ControlSystem([regra1, regra2, regra3, regra4, regra5])
  simulador_admissao = ctrl.ControlSystemSimulation(controle_admissao)

  #parametros de entrada
  simulador_admissao.input['curso superior']=0
  simulador_admissao.input['experiência']=100

  simulador_admissao.compute()

  print(simulador_admissao.output['admissão'])
  admissao.view(sim=simulador_admissao)
  plt.show()